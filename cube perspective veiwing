#include<gl/glut.h>
#include<stdio.h>
#include<math.h>
typedef GLint vertex[3];
vertex v[8]={{-1,-1,-1},{-1,1,-1},{1,-1,-1},{1,1,-1},{-1,-1,1},{-1,1,1},{1,-1,1},{1,1,1}};
float col[][3]={{0,0,0},{0,1,0},{1,0,0},{1,1,0},{0,0,1},{0,1,1},{1,0,1},{1,1,1}};
float eye[3]={0,0,4};

void init()
{
	glClearColor(0,0,0,1);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	glFrustum(-3,3,-3,3,5,15);
	glMatrixMode(GL_MODELVIEW);
	glEnable(GL_DEPTH_TEST);
	
}
void square(int a,int b,int c, int d)
{
	
	glBegin(GL_QUADS);
	glColor3fv(col[a]);
	glVertex3iv(v[a]);
	glColor3fv(col[b]);
	glVertex3iv(v[b]);
	glColor3fv(col[c]);
	glVertex3iv(v[c]);
	glColor3fv(col[d]);
	glVertex3iv(v[d]);
	glEnd();
}
void cube()
{
	square(0,2,3,1);
	square(4,6,7,5);
	square(5,7,3,1);
	square(4,6,2,0);
	square(4,0,1,5);
	square(6,2,3,7);
}
void display()
{
	glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT);
	glLoadIdentity();
	gluLookAt(eye[0],eye[1],eye[2],0,0,0,0,1,0);
	cube();
	glFlush();
	glutSwapBuffers();
}
void mykey(unsigned char key,int x,int y)
{
	if(key=='X')
		eye[0]=eye[0]+0.1;
	if(key=='x')
		eye[0]=eye[0]-0.1;
	if(key=='Y')
		eye[1]=eye[1]+0.1;
	if(key=='y')
		eye[1]=eye[1]-0.1;
	if(key=='Z')
		eye[2]=eye[2]+0.1;
	if(key=='z')
		eye[2]=eye[2]-0.1;
	glutPostRedisplay();
}

void main()
{
	glutInitDisplayMode(GLUT_DOUBLE|GLUT_DEPTH);
	glutInitWindowSize(600,600);
	glutCreateWindow("3D-color-cube");
	init();
	glutKeyboardFunc(mykey);
	glutDisplayFunc(display);
	glutMainLoop();
}

Sheetal Shettigar <sheetalshettigar40@gmail.com>
Thu, May 16, 8:25 PM (12 days ago)
to Pavan


